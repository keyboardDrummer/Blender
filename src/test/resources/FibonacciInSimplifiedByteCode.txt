class Fibonacci extends java.lang.Object with interfaces: ()


fields:

methods:
  method => nameIndex:"<init>", descriptorIndex:()V, flags:ACC_PUBLIC
  attributes:
    code: nameIndex:"Code", maxLocal:1
    instructions:
      load address(0)
      invoke special(java.lang.Object."<init>" ()V)
      void return instruction()
    attributes:
    exceptions:
  method => nameIndex:"main", descriptorIndex:([Ljava/lang/String;)V, flags:ACC_STATIC, ACC_PUBLIC
  attributes:
    code: nameIndex:"Code", maxLocal:1
    instructions:
      get static(java.lang.System/"out" Ljava/io/PrintStream;)
      small integer constant(5)
      invoke static(Fibonacci."fibonacci" (I)I)
      invoke virtual(java.io.PrintStream."print" (I)V)
      void return instruction()
    attributes:
    exceptions:
  method => nameIndex:"fibonacci", descriptorIndex:(I)I, flags:ACC_STATIC, ACC_PUBLIC
  attributes:
    code: nameIndex:"Code", maxLocal:1
    instructions:
      load integer(0)
      small integer constant(2)
      if integer compare greater or equal("false-4962768465676381896")
      small integer constant(1)
      goto("end4437113781045784766")
      label("false-4962768465676381896")
      load integer(0)
      small integer constant(1)
      subtract integer()
      invoke static(Fibonacci."fibonacci" (I)I)
      load integer(0)
      small integer constant(2)
      subtract integer()
      invoke static(Fibonacci."fibonacci" (I)I)
      add integers()
      label("end4437113781045784766")
      integer return instruction()
    attributes:
    exceptions:

attributes: