class 5 extends 25 with interfaces: ()

constant pool:
  #1: Utf8 java/lang/Object
  #2: Utf8 Fibonacci
  #3: Utf8 fibonacci
  #4: Utf8 (I)I
  #5: Class 2
  #6: NameAndType 3:4
  #7: Methodref 5.6
  #8: Utf8 Code
  #9: Utf8 print
  #10: Utf8 (I)V
  #11: Utf8 java/io/PrintStream
  #12: Class 11
  #13: NameAndType 9:10
  #14: Methodref 12.13
  #15: Utf8 out
  #16: Utf8 Ljava/io/PrintStream;
  #17: Utf8 java/lang/System
  #18: Class 17
  #19: NameAndType 15:16
  #20: Fieldref field reference: 18.19
  #21: Utf8 main
  #22: Utf8 ([Ljava/lang/String;)V
  #23: Utf8 <init>
  #24: Utf8 ()V
  #25: Class 1
  #26: NameAndType 23:24
  #27: Methodref 25.26
  #28: Utf8 StackMapTable

fields:

methods:
  method => nameIndex:23, descriptorIndex:24, flags:ACC_PUBLIC
  attributes:
    code: nameIndex:8, maxStack:1, maxLocal:1
    instructions:
      load address(0)
      invoke special(27)
      void return instruction()
    attributes:
    exceptions:
  method => nameIndex:21, descriptorIndex:22, flags:ACC_STATIC, ACC_PUBLIC
  attributes:
    code: nameIndex:8, maxStack:2, maxLocal:1
    instructions:
      get static(20)
      small integer constant(5)
      invoke static(7)
      invoke virtual(14)
      void return instruction()
    attributes:
    exceptions:
  method => nameIndex:3, descriptorIndex:4, flags:ACC_STATIC, ACC_PUBLIC
  attributes:
    code: nameIndex:8, maxStack:3, maxLocal:1
    instructions:
      load integer(0)
      small integer constant(2)
      if integer compare greater or equal(7)
      small integer constant(1)
      goto(16)
      load integer(0)
      small integer constant(1)
      subtract integer()
      invoke static(7)
      load integer(0)
      small integer constant(2)
      subtract integer()
      invoke static(7)
      add integers()
      integer return instruction()
    attributes:
      stackMap nameIndex:28
        same frame, offset:9
        same locals, 1 stack item, offset:12
          int
    exceptions:

attributes: