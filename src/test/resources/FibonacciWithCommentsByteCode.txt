class 5 extends 25 with interfaces: ()

Constant pool:
  Utf8 java/lang/Object
  Utf8 Fibonacci
  Utf8 fibonacci
  Utf8 (I)I
  Class 2
  NameAndType 3:4
  Methodref 5.6
  Utf8 Code
  Utf8 print
  Utf8 (I)V
  Utf8 java/io/PrintStream
  Class 11
  NameAndType 9:10
  Methodref 12.13
  Utf8 out
  Utf8 Ljava/io/PrintStream;
  Utf8 java/lang/System
  Class 17
  NameAndType 15:16
  Fieldref field reference: 18.19
  Utf8 main
  Utf8 ([Ljava/lang/String;)V
  Utf8 <init>
  Utf8 ()V
  Class 1
  NameAndType 23:24
  Methodref 25.26
  Utf8 StackMapTable
{

  Method;
    name:23
    descriptor:24
    flags:ACC_PUBLIC
    Code:
      name:8, maxStack:1, maxLocal:1
        load address(0)
        invoke special(27)
        void return instruction()
      exceptions:

  Method;
  /* hello */
  /* bye */
  /* PS */
    name:21
    descriptor:22
    flags:ACC_STATIC, ACC_PUBLIC
    Code:
      name:8, maxStack:2, maxLocal:1
        get static(20)
        small integer constant(5)
        invoke static(7)
        invoke virtual(14)
        void return instruction()
      exceptions:

  Method;
    name:3
    descriptor:4
    flags:ACC_STATIC, ACC_PUBLIC
    Code:
      name:8, maxStack:3, maxLocal:1
        load integer(0)
        /* here comes two */
        small integer constant(2)
        if integer compare greater or equal(7)
        small integer constant(1)
        goto(16)
        load integer(0)
        small integer constant(1)
        subtract integer()
        invoke static(7)
        load integer(0)
        small integer constant(2)
        subtract integer()
        invoke static(7)
        add integers()
        integer return instruction()
      stackMap nameIndex:28
        same frame, offset:9
        same locals, 1 stack item, offset:12
          int
      exceptions:

}